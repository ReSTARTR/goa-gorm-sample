// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "celler": user Resource Client
//
// Command:
// $ goagen
// --design=github.com/ReSTARTR/goa-sample/design
// --out=$(GOPATH)/src/github.com/ReSTARTR/goa-sample
// --version=v1.3.0

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
	"strconv"
)

// ShowUserPath computes a request path to the show action of user.
func ShowUserPath(userID int) string {
	param0 := strconv.Itoa(userID)

	return fmt.Sprintf("/users/%s", param0)
}

// Get user by id
func (c *Client) ShowUser(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewShowUserRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewShowUserRequest create the request corresponding to the show action endpoint of the user resource.
func (c *Client) NewShowUserRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
