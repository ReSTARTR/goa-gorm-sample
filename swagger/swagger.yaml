consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  ApplicationVndUser:
    description: user media type (default view)
    example:
      description: Voluptas ratione voluptates non minus.
      id: 8.1325685e+18
      title: Voluptas laudantium sint quisquam voluptatibus labore.
    properties:
      description:
        description: description
        example: Voluptas ratione voluptates non minus.
        type: string
      id:
        description: id
        example: 8.1325685e+18
        format: int64
        type: integer
      title:
        description: title
        example: Voluptas laudantium sint quisquam voluptatibus labore.
        type: string
    title: 'Mediatype identifier: application.vnd.user+json; view=default'
    type: object
  ApplicationVndUserCollection:
    description: ApplicationVndUserCollection is the media type for an array of ApplicationVndUser
      (default view)
    example:
    - description: Voluptas ratione voluptates non minus.
      id: 8.1325685e+18
      title: Voluptas laudantium sint quisquam voluptatibus labore.
    - description: Voluptas ratione voluptates non minus.
      id: 8.1325685e+18
      title: Voluptas laudantium sint quisquam voluptatibus labore.
    - description: Voluptas ratione voluptates non minus.
      id: 8.1325685e+18
      title: Voluptas laudantium sint quisquam voluptatibus labore.
    items:
      $ref: '#/definitions/ApplicationVndUser'
    title: 'Mediatype identifier: application.vnd.user+json; type=collection; view=default'
    type: array
  GoaExampleCom:
    description: A bottle of wine (default view)
    example:
      href: Reprehenderit qui est dicta distinctio voluptates.
      id: 6.507623e+18
      name: Odio aut.
    properties:
      href:
        description: API href for making requests on the bottle
        example: Reprehenderit qui est dicta distinctio voluptates.
        type: string
      id:
        description: Unique bottle ID
        example: 6.507623e+18
        format: int64
        type: integer
      name:
        description: Name of wine
        example: Odio aut.
        type: string
    required:
    - id
    - href
    - name
    title: 'Mediatype identifier: application/vnd.goa.example.com+json; view=default'
    type: object
  UserPayload:
    example:
      description: Aperiam eius quibusdam dolores beatae vel.
      title: Ex aperiam est praesentium cum.
    properties:
      description:
        example: Aperiam eius quibusdam dolores beatae vel.
        type: string
      title:
        example: Ex aperiam est praesentium cum.
        type: string
    title: UserPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
host: localhost:8000
info:
  description: A simple goa service
  title: The virtual wine celler
  version: ""
paths:
  /bottles/{bottleID}:
    get:
      description: Get bottle by id
      operationId: bottle#show
      parameters:
      - description: Bottle ID
        in: path
        name: bottleID
        required: true
        type: integer
      produces:
      - application/vnd.goa.example.com+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaExampleCom'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show bottle
      tags:
      - bottle
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download swagger/swagger.json
  /swaggerui/{filepath}:
    get:
      operationId: swagger#/swaggerui/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: Download swaggerui/dist
  /users/:
    get:
      description: List users
      operationId: user#index
      produces:
      - application.vnd.user+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApplicationVndUserCollection'
        "404":
          description: Not Found
      schemes:
      - http
      summary: index user
      tags:
      - user
    post:
      description: Create user
      operationId: user#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserPayload'
      produces:
      - application.vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApplicationVndUser'
        "404":
          description: Not Found
      schemes:
      - http
      summary: create user
      tags:
      - user
  /users/{userID}:
    get:
      description: Get user by id
      operationId: user#show
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application.vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApplicationVndUser'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show user
      tags:
      - user
    put:
      description: Update user
      operationId: user#update
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserPayload'
      produces:
      - application.vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApplicationVndUser'
        "404":
          description: Not Found
      schemes:
      - http
      summary: update user
      tags:
      - user
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/GoaExampleCom'
schemes:
- http
swagger: "2.0"
