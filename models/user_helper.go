// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "celler": Model Helpers
//
// Command:
// $ goagen
// --design=github.com/ReSTARTR/goa-gorm-sample/design
// --out=$(GOPATH)/src/github.com/ReSTARTR/goa-gorm-sample
// --version=v1.3.0

package models

import (
	"context"
	"github.com/ReSTARTR/goa-gorm-sample/app"
	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"time"
)

// MediaType Retrieval Functions

// ListApplicationVndUser returns an array of view: default.
func (m *UserDB) ListApplicationVndUser(ctx context.Context) []*app.ApplicationVndUser {
	defer goa.MeasureSince([]string{"goa", "db", "applicationVndUser", "listapplicationVndUser"}, time.Now())

	var native []*User
	var objs []*app.ApplicationVndUser
	err := m.Db.Scopes().Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing User", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.UserToApplicationVndUser())
	}

	return objs
}

// UserToApplicationVndUser loads a User and builds the default view of media type ApplicationVndUser.
func (m *User) UserToApplicationVndUser() *app.ApplicationVndUser {
	user := &app.ApplicationVndUser{}
	user.Description = &m.Description
	user.Title = &m.Title

	return user
}

// OneApplicationVndUser loads a User and builds the default view of media type ApplicationVndUser.
func (m *UserDB) OneApplicationVndUser(ctx context.Context, id int) (*app.ApplicationVndUser, error) {
	defer goa.MeasureSince([]string{"goa", "db", "applicationVndUser", "oneapplicationVndUser"}, time.Now())

	var native User
	err := m.Db.Scopes().Table(m.TableName()).Where("id = ?", id).Find(&native).Error

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting User", "error", err.Error())
		return nil, err
	}

	view := *native.UserToApplicationVndUser()
	return &view, err
}
